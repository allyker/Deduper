GOAL:
Remove all PCR duplicates from a sorted SAM file. We do this by removing sequences that have the same
umi, start position, and length

BACKGROUND INFO:
SAM files have a header section and then read alignment info. EX:
Header section
@HD    VN:1.3    SO:coordinate
@SQ    SN:conticA    LN:443
@SQ    SN:contigB    LN:1493
@SQ    SN:contigC    LN:328

Tab-delimited read alignment information lines
readID43GYAX15:7:1:1202:19894/1    256    contig43    613960    1    65M    *    0    0    CCAGCGCGAACGAAATCCGCATGCGTCTGGTCGTTGCACGGAACGGCGGCGGTGTGATGCACGGC    EDDEEDEE=EE?DE??DDDBADEBEFFFDBEFFEBCBC=?BEEEE@=:?::?7?:8-6?7?@??#    AS:i:0    XS:i:0  XN:i:0  XM:i:0  XO:i:0  XG:i:0  NM:i:0  MD:Z:65  YT:Z:UU

Meaning of columns:

QNAME    FLAG    RNAME    POS    MAPQ    CIGAR    RNEXT
 PNEXT    TLEN    SEQ    QUAL    TAGS

    Read Name
    SAM flag --> decode
    contig name or * for unmapped
    mapped position of base 1 of a read on the reference sequence
    MAPQ mapping quality
    CIGAR string describing insertions and deletions
    Name of mate
    Position of mate
    Template length
    Read Sequence
    Read Quality
    Additional information in TAG:TYPE:VALUE format

We care about QNAME, POS (leftmost position), FLAG, and CIGAR
-QNAME: Has UMI at end like this: NS500451:154:HWKTMBGXX:1:11101:15364:1139:GAACAGGT
-POS: leftmost position, we need to add the info in the CIGAR string to this
-CIGAR: We use this to find the length of the sequence
  --M=match or mismatch
  --I=insertion in sequence
  --D=deletion in sequence
  --N=skipped region in reference
  --S=soft clipped sequence
  --X+= mismatch and match
  -Total length=M+D+endS+N
-FLAG: To see if it is paired or not, also alignment direction


INPUT:
Sorted SAM file
List of UMIS

PSEUDOCODE:

Argparse:
-f, --file: required arg, absolute file path
-p, --paired: optional arg, designates file is paired end (not single-end)
-u, --umi: optional arg, designates file containing the list of UMIs (unset if randomers instead of UMIs)
-h, --help: optional arg, takes sorted SAM file and removes dupilcates, requires  SORTED sam file and list of umis (optional)
-e, -error: optional, turns error correct on for umis
functions:

def FLAG_check(FLAG)
```looks at FLAG to see if forward or reverse/ does other stuff for paired```
if flag is 16
  return reverse,
  if not return forward
maybe check for paired
Ex: FLAG_check(16) should return reverse

def UMI_check(UMI)
```sees if umi is in dict/tuple (maybe corrects?)```
if umi in tuple/dict return umi
  else if error correct on
    see if similar umi in tuple/dict return that umi
      add :EC to header to show it has been altered
Ex: UMI_check(AACGCCAT) should return AACGCCAT

def CIGAR(CIGAR, POS, forward/reverse)
```looks at CIGAR string to determine softclipping```
If forward Counts #S at beginning and subtract from POS
If reverse Ignore softclipping at beginning add length to POS:
Total length=M+D+endS+N
  return(POS)
EX: CIGAR(3S10M, 100, forward) would return 97


main pseudocode:

ARG input:
if -p:
  stop and print error message
  will probably put a paired end mode in final code
    -Store lines as a pair?
if -u
  open u.arg
    make tuple? of all umis

(LOOK AT CHROMOSOMES, MAKE DICTIONARY??)
open SAM file, open output SAM file
  read line
    if starts with @
      don't do anything

    if not starts with @
    FOR EACH CHROMOSOME:
      (check chromosome)
    empty dictionary
    -will store POS as key and UMI as value
    
    split line into parts, store line as whatever (tuple again?)
      UMI_check(UMI)
        skip line if fails (non-error correct/non randomer mode)
        FLAG_check(FLAG)
        CIGAR(CIGAR, POS, forward/reverse)
        check if POS-UMI pair already in dictionary
          if not put it in
          write line to output file
    repeat until all lines have been evaluated
